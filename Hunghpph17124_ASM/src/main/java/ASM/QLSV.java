/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ASM;

import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class QLSV extends javax.swing.JFrame {

    private Connection cn;
    private DefaultTableModel model;
    private String hinhanh = null;
    private Vector sv = null;
    private ArrayList<Student> list = new ArrayList<>();
    private String ma;

    /**
     * Creates new form QLSV
     */
    public QLSV() {
        initComponents();
        this.setLocationRelativeTo(this);
        cn = ConnectSQL.ketnoi("FPL_DAOTAO");
        model = (DefaultTableModel) tblShow.getModel();
        loadDataToTable();
        Display(0);
        tblShow.setRowSelectionInterval(0, 0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        JLabel1 = new javax.swing.JLabel();
        txtMaSV = new javax.swing.JTextField();
        txtHoTen = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        rdoMale = new javax.swing.JRadioButton();
        rdoFemale = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblShow = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lblHinhAnh = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setLayout(new java.awt.GridLayout(2, 2, 10, 10));

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2.icon/icon/Delete.png"))); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel2.add(btnDelete);

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2.icon/icon/Edit.png"))); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel2.add(btnUpdate);

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2.icon/icon/Add.png"))); // NOI18N
        btnNew.setText("NEW");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        jPanel2.add(btnNew);

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2.icon/icon/Save.png"))); // NOI18N
        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel2.add(btnSave);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Quản Lý Sinh Viên");

        jLabel2.setText("Họ Tên");

        jLabel3.setText("Email");

        jLabel4.setText("Số điện thoại");

        jLabel5.setText("Giới Tính");

        jLabel6.setText("Địa Chỉ");

        JLabel1.setText("MaSV");

        txtAddress.setColumns(20);
        txtAddress.setRows(5);
        jScrollPane1.setViewportView(txtAddress);

        buttonGroup1.add(rdoMale);
        rdoMale.setSelected(true);
        rdoMale.setText("Nam");

        buttonGroup1.add(rdoFemale);
        rdoFemale.setText("Nữ");

        tblShow.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã SV", "Họ tên", "Email", "Số ĐT", "Giới Tính", "Địa chỉ", "Hình"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblShow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblShowMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblShow);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblHinhAnh.setText("Ảnh");
        lblHinhAnh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHinhAnhMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHinhAnh, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHinhAnh, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rdoMale, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rdoFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtMaSV)
                        .addComponent(txtHoTen)
                        .addComponent(txtEmail)
                        .addComponent(txtSDT)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JLabel1)
                            .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(rdoMale)
                            .addComponent(rdoFemale))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblShowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblShowMouseClicked
        // TODO add your handling code here:
        int row = tblShow.getSelectedRow();
        Display(row);

    }//GEN-LAST:event_tblShowMouseClicked

    private void lblHinhAnhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHinhAnhMouseClicked
        // TODO add your handling code here:
        try {
            JFileChooser jfc = new JFileChooser("src\\main\\resources\\Avata");
            jfc.showOpenDialog(null);
            File file = jfc.getSelectedFile();

            Image img = ImageIO.read(file);
            int witdh = lblHinhAnh.getWidth();
            int height = lblHinhAnh.getHeight();
            lblHinhAnh.setText("");
            lblHinhAnh.setIcon(new ImageIcon(img.getScaledInstance(witdh, height, 0)));
            hinhanh = file.getName();
        } catch (Exception e) {

        }


    }//GEN-LAST:event_lblHinhAnhMouseClicked

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        txtHoTen.setText("");
        txtMaSV.setText("");
        txtEmail.setText("");
        txtAddress.setText("");
        rdoMale.setSelected(true);
        txtSDT.setText("");
        lblHinhAnh.setIcon(null);
        hinhanh = null;
        tblShow.clearSelection();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        try {
            try {
                if (txtMaSV.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Mã sv không được bỏ trống");
                    return;
                }
                String ma = txtMaSV.getText();
                String data = "Select * from STUDENTS";
                Statement st = cn.createStatement();
                ResultSet rs = st.executeQuery(data);

                boolean check = false;
                while (rs.next()) {
                    String maTrung = rs.getString(1);
                    if (maTrung.equals(ma)) {
                        check = true;
                        JOptionPane.showMessageDialog(this, "Mã đã tồn tại");
                        return;

                    }

                }

            } catch (Exception e) {
            }
            try {
                if (txtHoTen.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Tên sv không được bỏ trống");
                    return;
                }
            } catch (Exception e) {
            }
            try {
                String email = txtEmail.getText();
                String mail = "^[A-Za-z0-9_.]{5,32}@([a-zA-Z0-9]{2,12})(.[a-zA-Z]{2,12})+$";
                if (email.matches(mail)) {
                } else {
                    JOptionPane.showMessageDialog(this, "sai định dang email");
                    return;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "lỗi Email");
            }
            try {
                String sdt = "(05[5|8|9]|08[1|2|3|4|5|86|9]|03[2|3|4|5|6|7|8|9]|07[0|9|7|6|8]|09[0|2|1|4|3|6|7|8|9]|01[2|9])+([0-9]{7,8})\\b/g";
                if (txtSDT.getText().matches("[0-9]{10}+")) {
                    
                }else{
                    JOptionPane.showMessageDialog(this, "Sai định dạng số điện thoại");
                    return;
                }
            } catch (Exception e) {
            }
            try {
                if (txtAddress.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Địa chỉ không được bỏ trống");
                    return;
                }
            } catch (Exception e) {
            }
            String sql = "insert into STUDENTS values(?,?,?,?,?,?,?)";
            PreparedStatement ps = cn.prepareStatement(sql);
            ps.setString(1, txtMaSV.getText().trim());
            ps.setString(2, txtHoTen.getText().trim());
            ps.setString(3, txtEmail.getText().trim());
            ps.setString(4, txtSDT.getText().trim());
            String gt = "";
            if (rdoMale.isSelected()) {
                gt = "1";
            } else {
                gt = "0";
            }
            ps.setString(5, gt);
            ps.setString(6, txtAddress.getText().trim());
            if (this.hinhanh == null) {
                ps.setString(7, "No image");

            } else {
                ps.setString(7, hinhanh.trim());
            }

            ps.executeUpdate();

            loadDataToTable();
            getIndex();
            hinhanh = "No image";
        } catch (Exception e) {
        }


    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        try {
         
            try {
                if (txtHoTen.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Tên sv không được bỏ trống");
                    return;
                }
            } catch (Exception e) {
            }
            try {
                String email = txtEmail.getText();
                String mail = "^[A-Za-z0-9_.]{5,32}@([a-zA-Z0-9]{2,12})(.[a-zA-Z]{2,12})+$";
                if (email.matches(mail)) {
                } else {
                    JOptionPane.showMessageDialog(this, "sai định dang email");
                    return;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "lỗi Email");
            }
            try {
                String sdt = "/^(0[234][0-9]{8}|1[89]00[0-9]{4})+$/";
                String soDT  = txtSDT.getText();
                if (soDT.matches("[0-9]{10}+")){
                }else{
                    JOptionPane.showMessageDialog(this, "Sai định dạng số điện thoại");
                    return;
                }
            } catch (Exception e) {
            }
            try {
                if (txtAddress.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Địa chỉ không được bỏ trống");
                    return;
                }
            } catch (Exception e) {
            }
            String sql = "update STUDENTS set Hoten=?,Email=?,SoDT=?,Gioitinh=?,Diachi=?,Hinh=? where MASV=?";
            PreparedStatement ps = cn.prepareStatement(sql);
            ps.setString(7, txtMaSV.getText());
            ps.setString(1, txtHoTen.getText());
            ps.setString(2, txtEmail.getText());
            ps.setString(3, txtSDT.getText());
            String gt = "";
            if (rdoMale.isSelected()) {
                gt = "1";
            } else {
                gt = "0";
            }
            ps.setString(4, gt);

            ps.setString(5, txtAddress.getText());
            if (this.hinhanh == null) {
                ps.setString(6, "No image");

            } else {
                ps.setString(6, hinhanh.trim());
            }
            ps.executeUpdate();
            loadDataToTable();
            getIndex();
            hinhanh = "No image";

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {

            String sql = "delete from students where MASV=?";
            PreparedStatement ps = cn.prepareStatement(sql);
            String ma = JOptionPane.showInputDialog(this, "Mã sv");
            String data = "Select * from STUDENTS";
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(data);

            boolean check = false;
            while (rs.next()) {
                String maTrung = rs.getString(1);
                if (maTrung.equals(ma)) {
                    check = true;
                    ps.setString(1, ma);
                }

            }
            if (check == false) {
                JOptionPane.showMessageDialog(this, "Mã không tồn tại");
                return;
            }

            st.executeQuery(data);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(this, "Xoá thành công");
            loadDataToTable();
            Display(0);
            tblShow.setRowSelectionInterval(0, 0);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Xoá không thành công");
        }


    }//GEN-LAST:event_btnDeleteActionPerformed
    private void loadDataToTable() {
        Statement st = null;
        ResultSet rs = null;

        try {
            String sql = "Select * from STUDENTS";
            st = cn.createStatement();
            rs = st.executeQuery(sql);

            model.setRowCount(0);
            while (rs.next()) {
                sv = new Vector();
                Student stu = new Student();
                sv.add(rs.getString("MASV"));
                sv.add(rs.getString("Hoten"));
                sv.add(rs.getString("Email"));
                sv.add(rs.getString("SoDT"));
                sv.add(rs.getString("Gioitinh"));
                sv.add(rs.getString("Diachi"));
                sv.add(rs.getString("Hinh"));
                model.addRow(sv);
                stu.setMaSV(rs.getString("MASV"));
                list.add(stu);

            }
            tblShow.setModel(model);
            st.close();
            rs.close();

        } catch (Exception e) {
            e.printStackTrace();

        }

    }

    private void Display(int row) {
        if (row < 0) {
            return;

        }
        txtMaSV.setText(tblShow.getValueAt(row, 0).toString());
        txtHoTen.setText(tblShow.getValueAt(row, 1).toString());
        txtEmail.setText(tblShow.getValueAt(row, 2).toString());
        txtSDT.setText(tblShow.getValueAt(row, 3).toString());
        int gt = Integer.parseInt(tblShow.getValueAt(row, 4).toString());
        if (gt == 1) {
            rdoMale.setSelected(true);
        } else {
            rdoFemale.setSelected(true);
        }
        txtAddress.setText(tblShow.getValueAt(row, 5).toString());
        String hinh = tblShow.getValueAt(row, 6).toString();
        lblHinhAnh.setText("");
        ImageIcon icon = new ImageIcon("src\\main\\resources\\Avata\\" + hinh);

        Image im = icon.getImage();
        ImageIcon img = new ImageIcon(im.getScaledInstance(lblHinhAnh.getWidth(), lblHinhAnh.getHeight(), 0));
        lblHinhAnh.setIcon(img);
    }

    private void getIndex() {
        try {
            list.removeAll(list);
            loadDataToTable();

            String sql2 = "Select * from STUDENTS where MASV=?";
            PreparedStatement ps2 = cn.prepareStatement(sql2);
            ps2.setString(1, txtMaSV.getText());
            ResultSet rs2 = ps2.executeQuery();
            while (rs2.next()) {
                rs2.getString(1);
                ma = rs2.getString(1).trim();

            }
            for (int i = 0; i <= list.size() - 1; i++) {
                Student stu = list.get(i);

                if (stu.getMaSV().equals(ma)) {
                    System.out.println(stu.getMaSV());
                    tblShow.setRowSelectionInterval(i, i);
                    System.out.println(i);
                    return;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();

        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLSV().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLabel1;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblHinhAnh;
    private javax.swing.JRadioButton rdoFemale;
    private javax.swing.JRadioButton rdoMale;
    private javax.swing.JTable tblShow;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMaSV;
    private javax.swing.JTextField txtSDT;
    // End of variables declaration//GEN-END:variables
}
