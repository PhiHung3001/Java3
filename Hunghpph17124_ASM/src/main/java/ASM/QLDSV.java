/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ASM;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class QLDSV extends javax.swing.JFrame {

    private ArrayList<DiemSV> list = new ArrayList<>();
    private DefaultTableModel model;
    private Connection cn;
    private Vector vec;
    private int current;

    /**
     * Creates new form QLDSV
     */
    public QLDSV() {
        initComponents();
        this.setLocationRelativeTo(null);
        cn = ConnectSQL.ketnoi("FPL_DAOTAO");
        model = (DefaultTableModel) tblShow.getModel();
        loadData();
        display(0);
        tblShow.setRowSelectionInterval(0, 0);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtMaTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtMaSv = new javax.swing.JTextField();
        txtTiengAnh = new javax.swing.JTextField();
        txtTinHoc = new javax.swing.JTextField();
        txtGDTC = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblTB = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblShow = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnFirst = new javax.swing.JButton();
        btnPreview = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("QUẢN LÝ ĐIỂM SINH VIÊN");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Mã sinh viên:");

        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2.icon/icon/Search.png"))); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(32, 32, 32)
                .addComponent(txtMaTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(btnTimKiem)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMaTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiem))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jLabel2.setText("Tìm kiếm");

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setText("Họ và tên:");

        jLabel5.setText("Mã SV");

        jLabel6.setText("TIẾNG ANH");

        jLabel7.setText("TIN HỌC");

        jLabel8.setText("GIÁO DỤC TC");

        txtGDTC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGDTCActionPerformed(evt);
            }
        });

        lblName.setText(".........");

        jLabel10.setText("Điểm TB:");

        lblTB.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTB.setForeground(new java.awt.Color(0, 51, 255));
        lblTB.setText("0");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTinHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGDTC, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMaSv)
                            .addComponent(txtTiengAnh)
                            .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(lblTB)))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblName))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtMaSv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel10)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTB)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtTiengAnh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtTinHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtGDTC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblShow.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã SV", "Họ tên", "Tiếng Anh", "Tin học", "GDTC", "Điểm TB"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblShow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblShowMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblShow);

        jLabel9.setForeground(new java.awt.Color(51, 51, 255));
        jLabel9.setText("3 sinh viên có điểm cao nhất");

        jPanel3.setLayout(new java.awt.GridLayout(4, 1, 5, 10));

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2.icon/icon/Delete.png"))); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel3.add(btnDelete);

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2.icon/icon/Edit.png"))); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel3.add(btnUpdate);

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2.icon/icon/Add.png"))); // NOI18N
        btnNew.setText("NEW");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        jPanel3.add(btnNew);

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2.icon/icon/Save.png"))); // NOI18N
        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel3.add(btnSave);

        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2.icon/icon/first.png"))); // NOI18N
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });
        jPanel4.add(btnFirst);

        btnPreview.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2.icon/icon/preview.png"))); // NOI18N
        btnPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviewActionPerformed(evt);
            }
        });
        jPanel4.add(btnPreview);

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2.icon/icon/next.png"))); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        jPanel4.add(btnNext);

        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2.icon/icon/last.png"))); // NOI18N
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });
        jPanel4.add(btnLast);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(176, 176, 176)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtGDTCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGDTCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGDTCActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        lblName.setText("");
        txtMaSv.setText("");
        lblTB.setText("");
        txtMaTimKiem.setText("");
        txtTiengAnh.setText("");
        txtTinHoc.setText("");
        txtGDTC.setText("");
        tblShow.clearSelection();
    }//GEN-LAST:event_btnNewActionPerformed

    private void tblShowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblShowMouseClicked
        // TODO add your handling code here:

        current = tblShow.getSelectedRow();
        display(tblShow.getSelectedRow());
    }//GEN-LAST:event_tblShowMouseClicked

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        display(0);
        tblShow.setRowSelectionInterval(0, 0);

    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        current = list.size() - 1;
        display(current);
        tblShow.setRowSelectionInterval(list.size() - 1, list.size() - 1);


    }//GEN-LAST:event_btnLastActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        current++;
        if (current > list.size() - 1) {

            current = list.size() - 1;
            tblShow.setRowSelectionInterval(current, current);
        } else {
            display(current);
            tblShow.setRowSelectionInterval(current, current);
        }


    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviewActionPerformed
        // TODO add your handling code here:
        current--;

        if (current < 0) {
            current = 0;
            tblShow.setRowSelectionInterval(current, current);

        } else {
            display(current);
            tblShow.setRowSelectionInterval(current, current);
        }


    }//GEN-LAST:event_btnPreviewActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        try {
            if (txtMaTimKiem.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Mã không được để trống");
                return;
            }
            String sql = "Select * from GRADE ";
            String ma = txtMaTimKiem.getText();
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            boolean check = false;
            while (rs.next()) {
                String maTrung = rs.getString(2);
                if (maTrung.equals(ma)) {
                    check = true;
                    JOptionPane.showMessageDialog(this, "Tìm kiếm thành công");

                }

            }
            if (!check) {
                JOptionPane.showMessageDialog(this, "Mã không tồn tại");
                return;
            }
            String sql2 = "select GRADE.MASV,STUDENTS.Hoten,Tienganh,Tinhoc,GDTC from GRADE join STUDENTS on  STUDENTS.MASV = GRADE.MASV  where STUDENTS.MASV =?";
            PreparedStatement ps = cn.prepareStatement(sql2);
            ps.setString(1, txtMaTimKiem.getText());
            ResultSet rs2 = ps.executeQuery();
            while (rs2.next()) {
                txtMaSv.setText(rs2.getString(1));
                lblName.setText(rs2.getString(2));
                txtTiengAnh.setText(rs2.getString(3));
                txtTinHoc.setText(rs2.getString(4));
                txtGDTC.setText(rs2.getString(5));

            }
            tblShow.clearSelection();
            for (DiemSV sv : list) {

                if (sv.getMaSV().equals(txtMaTimKiem.getText())) {
                    lblTB.setText(((float) Math.round(sv.getDiemTB() * 10) / 10) + "");
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        try {
            String ma = txtMaSv.getText();
            try {
                if (txtMaSv.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Mã không được để trống");
                    return;
                }
                String sql = "Select * from GRADE ";
                Statement st = cn.createStatement();
                ResultSet rs = st.executeQuery(sql);

                while (rs.next()) {
                    String maTrung = rs.getString(2);
                    if (maTrung.equals(ma)) {
                        JOptionPane.showMessageDialog(this, "Mã đã có điểm");
                        return;
                    }
                }
                boolean check = false;
                String sql2 = "Select * from STUDENTS";
                ResultSet rs2 = st.executeQuery(sql2);

                while (rs2.next()) {
                    String maTrung2 = rs2.getString(1);
                    if (maTrung2.equals(ma)) {
                        check = true;

                    }

                }
                if (check == false) {
                    JOptionPane.showMessageDialog(this, "Mã không tồn tại");
                    return;

                }
            } catch (Exception e) {
                e.printStackTrace();

            }

            try {

                if (txtTiengAnh.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Điểm tiếng anh không được để trống");
                    return;
                } else if (Float.parseFloat(txtTiengAnh.getText()) >= 0 || Float.parseFloat(txtTiengAnh.getText()) <= 10) {

                } else {
                    JOptionPane.showMessageDialog(this, "Điểm tiêngs anh phải lớn hơn 0");
                    return;

                }
            } catch (Exception e) {
            }
            try {

                if (txtTinHoc.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Điểm tin học không được để trống");
                    return;
                } else if (Float.parseFloat(txtTinHoc.getText()) >= 0 || Float.parseFloat(txtTinHoc.getText()) <= 10) {

                } else {
                    JOptionPane.showMessageDialog(this, "Điểm tin học phải lớn hơn 0");
                    return;

                }
            } catch (Exception e) {
            }
            try {

                if (txtGDTC.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Điểm GDTC không được để trống");
                    return;
                } else if (Float.parseFloat(txtGDTC.getText()) >= 0 || Float.parseFloat(txtGDTC.getText()) <= 10) {

                } else {
                    JOptionPane.showMessageDialog(this, "Điểm tin học phải lớn hơn 0");
                    return;

                }

            } catch (Exception e) {
            }

            String sql = "Insert into GRADE values(?,?,?,?) ";
            PreparedStatement ps = cn.prepareStatement(sql);
            ps.setString(1, txtMaSv.getText());
            ps.setString(2, txtTiengAnh.getText());
            ps.setString(3, txtTinHoc.getText());
            ps.setString(4, txtGDTC.getText());
            ps.executeUpdate();
            list.clear();
            loadData();

            String sql2 = "select Hoten from GRADE join STUDENTS on  STUDENTS.MASV = GRADE.MASV  where STUDENTS.MASV = ?";
            PreparedStatement ps2 = cn.prepareStatement(sql2);
            ps2.setString(1, txtMaSv.getText());

            ResultSet rs = ps2.executeQuery();
            if (rs.next()) {
                lblName.setText(rs.getString(1));
            }
            for (DiemSV sv : list) {

                if (sv.getMaSV().equals(txtMaSv.getText())) {
                    lblTB.setText(((float) Math.round(sv.getDiemTB() * 10) / 10) + "");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        try {
            try {

                if (txtTiengAnh.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Điểm tiếng anh không được để trống");
                    return;
                } else if (Float.parseFloat(txtTiengAnh.getText()) >= 0 || Float.parseFloat(txtTiengAnh.getText()) <= 10) {

                } else {
                    JOptionPane.showMessageDialog(this, "Điểm tiêngs anh phải lớn hơn 0");
                    return;

                }
            } catch (Exception e) {
            }
            try {
                float tinhoc = Float.parseFloat(txtTinHoc.getText());
                if (txtTinHoc.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Điểm tin học không được để trống");
                    return;
                } else if (Float.parseFloat(txtTinHoc.getText()) >= 0 || Float.parseFloat(txtTinHoc.getText()) <= 10) {

                } else {
                    JOptionPane.showMessageDialog(this, "Điểm tin học phải lớn hơn 0");
                    return;

                }
            } catch (Exception e) {
            }
                try {

                if (txtGDTC.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Điểm GDTC không được để trống");
                    return;
                } else if (Float.parseFloat(txtGDTC.getText()) >= 0 || Float.parseFloat(txtGDTC.getText()) <= 10) {

                } else {
                    JOptionPane.showMessageDialog(this, "Điểm GDTC học phải lớn hơn 0");
                    return;

                }

            } catch (Exception e) {
            }
            String sql = "update GRADE set Tienganh=?,Tinhoc=?,GDTC=? where MASV='" + txtMaSv.getText() + "'";
            PreparedStatement ps = cn.prepareStatement(sql);
            ps.setFloat(1, Float.parseFloat(txtTiengAnh.getText()));
            ps.setFloat(2, Float.parseFloat(txtTinHoc.getText()));
            ps.setFloat(3, Float.parseFloat(txtGDTC.getText()));
            ps.executeUpdate();
            list.clear();
            loadData();
            for (DiemSV sv : list) {

                if (sv.getMaSV().equals(txtMaSv.getText())) {
                    lblTB.setText(((float) Math.round(sv.getDiemTB() * 10) / 10) + "");
                }
            }
            tblShow.clearSelection();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            String sql = "delete from GRADE where MASV=?";
            PreparedStatement ps = cn.prepareStatement(sql);
            String ma = JOptionPane.showInputDialog(this, "Mã sv");
            String data = "Select * from GRADE";
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(data);

            boolean check = false;
            while (rs.next()) {
                String maTrung = rs.getString(2);
                if (maTrung.equals(ma)) {
                    check = true;
                    ps.setString(1, ma);
                }

            }
            if (check == false) {
                JOptionPane.showMessageDialog(this, "Mã không tồn tại");
                return;
            }

            st.executeQuery(data);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(this, "Xoá thành công");
            list.clear();
            loadData();
            display(0);
            tblShow.setRowSelectionInterval(0, 0);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Xoá không thành công");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed
    private void loadData() {
        try {
            model.setRowCount(0);
            Statement st = cn.createStatement();
            String sql = "select top 3 STUDENTS.MASV,STUDENTS.Hoten,Tienganh,Tinhoc,GDTC,\n"
                    + "(Tienganh + Tinhoc + GDTC)/3 as DiemTB from GRADE, STUDENTS \n"
                    + "where GRADE.MASV = STUDENTS.MASV \n"
                    + "order by DiemTb desc";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                DiemSV sv = new DiemSV();
                sv.setMaSV(rs.getString(1));
                sv.setHoTen(rs.getString(2));
                sv.setTiengAnh(rs.getFloat(3));
                sv.setTinHoc(rs.getFloat(4));
                sv.setGDTC(rs.getFloat(5));
                sv.setDiemTB(rs.getFloat(6));

                list.add(sv);

            }

            loadDataToTable();
            rs.close();
            st.close();
        } catch (Exception e) {

        }

    }

    private void loadDataToTable() {
        model.setRowCount(0);
        for (DiemSV sv : list) {
            Object[] row = new Object[]{
                sv.getMaSV(), sv.getHoTen(), sv.getTiengAnh(), sv.getTinHoc(), sv.getGDTC(), ((float) Math.round(sv.getDiemTB() * 10) / 10)

            };
            System.out.println(sv.getDiemTB());
            model.addRow(row);
        }

    }

    private void display(int i) {
        DiemSV sv = list.get(i);
        i = current;
        txtMaSv.setText(sv.getMaSV());
        lblName.setText(sv.getHoTen());
        txtTiengAnh.setText(sv.getTiengAnh() + "");
        txtTinHoc.setText(sv.getTinHoc() + "");
        txtGDTC.setText(sv.getGDTC() + "");
        lblTB.setText(((float) Math.round(sv.getDiemTB() * 10) / 10) + "");

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLDSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLDSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLDSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLDSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLDSV().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPreview;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblTB;
    private javax.swing.JTable tblShow;
    private javax.swing.JTextField txtGDTC;
    private javax.swing.JTextField txtMaSv;
    private javax.swing.JTextField txtMaTimKiem;
    private javax.swing.JTextField txtTiengAnh;
    private javax.swing.JTextField txtTinHoc;
    // End of variables declaration//GEN-END:variables
}
